apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'kotlin-allopen'

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.robertomiranda.postlist.OpenClass'
    annotation 'com.robertomiranda.postlist.OpenForTesting'
}

//Load Key store file for sing app
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId "com.robertomiranda.postlist"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode keystoreProperties['versionCode'].toInteger()
        versionName keystoreProperties['versionName']

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile rootProject.file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            testCoverageEnabled true
        }

        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        animationsDisabled = true
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":data")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin_version"

    // JetPack : https://developer.android.com/jetpack/androidx/releases/
    implementation "androidx.core:core-ktx:$versions.core_ktx_version"
    implementation "androidx.appcompat:appcompat:$versions.appcompat_version"
    implementation "androidx.activity:activity-ktx:$versions.activity_version"
    implementation "androidx.fragment:fragment-ktx:$versions.fragment_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle_version"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swipe_refresh_layout"
    implementation "androidx.paging:paging-runtime-ktx:$versions.paggination_version"

    // Material components : https://material.io/develop/android/
    implementation "com.google.android.material:material:$versions.material_components_version"
    // Navigation : https://developer.android.com/jetpack/androidx/releases/navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation_version"

    // Koin
    implementation "org.koin:koin-androidx-scope:$versions.koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$versions.koin_version"
    implementation "org.koin:koin-androidx-ext:$versions.koin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.2'
    androidTestImplementation "org.koin:koin-test:$versions.koin_version"

    //RX
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid_version"
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava_version"

    //Test
    testImplementation "junit:junit:$versions.junit_version"
    testImplementation "androidx.arch.core:core-testing:$versions.arch_core_testing_version"
    testImplementation "io.mockk:mockk:$versions.mockk_version"

    //Implementation test
    //Android X and Espresso Testing
    androidTestImplementation "androidx.test:core:$versions.core_ktx_version"
    androidTestImplementation "androidx.test:runner:$versions.core_ktx_version"
    androidTestImplementation "androidx.test:rules:$versions.core_ktx_version"
    androidTestImplementation "androidx.test:monitor:$versions.core_ktx_version"
    androidTestImplementation "androidx.test.ext:junit:$versions.test_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$versions.espresso_version"

    // Mockito
    androidTestImplementation "org.mockito:mockito-android:$versions.mockito_version"

    // Fragments testing
    debugImplementation "androidx.fragment:fragment-testing:$versions.fragment_version"
}
